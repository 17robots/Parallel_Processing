Results
Processor Count         Arr Size 
                        1000        2000        4000        8000        16000       
1                       .000022     .000039     .000077     .000161     .000310
2                       .000029     .000045     .000079     .000155     .000334
4                       .000052     .000056     .000084     .000164     .000320
8                       .000035     .000049     .000145     .000198     .000390

Speedup

From 1 -> 2 Processors

01000 N -> .000022 / .000029 = 0.76
02000 N -> .000039 / .000045 = 0.87
04000 N -> .000077 / .000079 = 0.97
08000 N -> .000161 / .000155 = 1.03
16000 N -> .000310 / .000334 = 0.93

From 1 -> 4 Processors

01000 N -> .000022 / .000052 = 0.42
02000 N -> .000039 / .000056 = 0.70
04000 N -> .000077 / .000084 = 0.92
08000 N -> .000161 / .000164 = 0.98
16000 N -> .000310 / .000320 = 0.97

From 1 -> 8 Processors

01000 N -> .000022 / .000035 = 0.42
02000 N -> .000039 / .000049 = 0.80
04000 N -> .000077 / .000145 = 0.53
08000 N -> .000161 / .000198 = 0.81
16000 N -> .000310 / .000390 = 0.79

Efficiency

From 1 -> 2 Processors
01000 N -> 0.76 / 2 = .380
02000 N -> 0.87 / 2 = .435
04000 N -> 0.97 / 2 = .485
08000 N -> 1.03 / 2 = .515
16000 N -> 0.93 / 2 = .465

From 1 -> 4 Processors
01000 N -> 0.42 / 4 = .105
02000 N -> 0.70 / 4 = .175
04000 N -> 0.92 / 4 = .230
08000 N -> 0.98 / 4 = .245
16000 N -> 0.97 / 4 = .2425

From 1 -> 8 Processors
01000 N -> 0.42 / 8 = .0525
02000 N -> 0.80 / 8 = .1
04000 N -> 0.53 / 8 = .06625
08000 N -> 0.81 / 8 = .10125
16000 N -> 0.79 / 8 = .09875


Speedup Table

Processor Size      Arr Size
                    1000        2000        4000        8000      16000
1                   1           1           1           1         1
2                   .76         .87         .97         1.03      .93
4                   .42         .70         .92         .98       .97
8                   .42         .8          .53         .81       .79

Efficiency Table

Processor Size      Arr Size
                    1000        2000        4000        8000      16000
1                   1           1           1           1         1
2                   .38         .435        .485        .515      .465
4                   .105        .175        .230        .245      .2425
8                   .0525       .1          .06625      .10125    .09875

Conclusion
This is a weakly scalable algorithm because the efficiency decreases as both problem size and processor size icrease 